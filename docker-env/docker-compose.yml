services:
  postgres:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db-scripts:/docker-entrypoint-initdb.d

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: keycloak
    command: ["start-dev", "--import-realm"]
    environment:
      DB_VENDOR: POSTGRES
      KC_DB: postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    volumes:
      - ./realms/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - keycloak_data:/opt/keycloak/data
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.1
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_secrets:/etc/zookeeper/secrets
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.8.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    hostname: kafka
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS:  PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
      - kafka_secrets:/etc/kafka/secrets

  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    restart: always
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    image: grafana/grafana:11.5.2
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
    depends_on:
      - loki
      - prometheus

volumes:
  postgres_data:
  keycloak_data:
  zookeeper_data:
  zookeeper_secrets:
  zookeeper_log:
  kafka_data:
  kafka_secrets:
  prometheus_data: